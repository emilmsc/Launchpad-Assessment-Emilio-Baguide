AWSTemplateFormatVersion: "2010-09-09"
Description: Business Unit 4 Stack Template
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Business Unit"
        Parameters:
          - pBusinessUnit
      - Label:
          default: "Deployment Environment"
        Parameters:
          - pEnvironmentName
      - Label:
          default: "VPC Earameters"
        Parameters:
          - pVPCCIDRBU4
          - pTransitGatewayID
          - pSubnetData1CIDR
          - pSubnetData2CIDR
      - Label:
          default: "Database parameters"
          Parameters:
            - DatabaseName
            - pDBPort
            - pDBSize
            - pDBInstanceClass

Parameters:
  pBusinessUnit:
    Description: Identify the business unit that deploys this resource
    Type: String
    Default: BU4
  pEnvironmentName:
    Description: Defines the deployment environment
    Type: String
    MaxLength: 256
    AllowedValues:
      - Production
      - Staging
      - Development
    Default: Development
  pVPCBU4CIDR:
    Description: Please enter the IP block (CIDR notation) for this VPC
    Type: String
    Default: 10.4.0.0/16
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: "Must be a valid IP CIDR range of the form x.x.x.x/x."
  pSubnetData1CIDR:
    Description: Please enter the IP range (CIDR notation) for the data1 subnet.
    Type: String
    Default: 10.4.3.0/24
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: "Must be a valid IP CIDR range of the form x.x.x.x/x."
  pSubnetData2CIDR:
    Description: Please enter the IP range (CIDR notation) for the data2 subnet.
    Type: String
    Default: 10.4.4.0/24
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: "Must be a valid IP CIDR range of the form x.x.x.x/x."
  pTransitGatewayID:
    Description: Transit Gateway ID
    Type: String
    Default: tgw-06d817419f4dc2703

  # Database Parameters
  pDatabaseName:
    Description: An DatabaseName that is prefixed as project name.
    Type: String
    MaxLength: 256
    Default: appdatabase
  pDBPort:
    Description: TCP/IP port for the database in range 1150-65535
    Type: Number
    MinValue: '1150'
    MaxValue: '65535'
    Default: '3306'
  pDBSize:
    Description: Database size 5 to 3072 GB
    Type: Number
    Default: '5'
    MinValue: '5'
    MaxValue: '3072'
  pDBInstanceClass:
    Description: Database instance class - only burstable
    Type: String
    AllowedValues:
      - db.t3.medium
      - db.t3.small
      - db.t3.micro
    Default: db.t3.micro

Resources:
  VPCBU4:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref pVPCBU4CIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Join [ "",[ !Ref "pBusinessUnit","-VPC" ] ]
          
  InternetGatewayforVPCBU4:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Join [ "",[!Ref "pEnvironmentName","-IG"] ]
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGatewayforVPCBU4
      VpcId: !Ref VPCBU4

  SubnetData1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      VpcId: !Ref VPCBU4
      CidrBlock: !Ref pSubnetData1CIDR
      Tags:
        - Key: Name
          Value: !Join [ "", [ "Data-",!Select [ 0, !GetAZs  '' ] ] ]
  SubnetData2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      VpcId: !Ref VPCBU4
      CidrBlock: !Ref pSubnetData2CIDR
      Tags:
        - Key: Name
          Value: !Join [ "", [ "Data-",!Select [ 1, !GetAZs  '' ] ] ]

# Route table private, associate subnets and create route
  RouteTablePrivate1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCBU4
      Tags:
        - Key: Name
          Value: private-rt-1a
  RouteTablePrivate2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCBU4
      Tags:
        - Key: Name
          Value: private-rt-1b

  DataSubnet1RouteTablePrivateAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePrivate1
      SubnetId: !Ref SubnetData1
  DataSubnet2RouteTablePrivateAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTablePrivate2
      SubnetId: !Ref SubnetData2

#  RoutePriv1:
#    Type: AWS::EC2::Route
#    Properties:
#      RouteTableId: !Ref RouteTablePrivate1
#      DestinationCidrBlock: 0.0.0.0/0
#      NatGatewayId: !Ref NatGateway1
#  RoutePriv2:
#    Type: AWS::EC2::Route
#    Properties:
#      RouteTableId: !Ref RouteTablePrivate2
#      DestinationCidrBlock: 0.0.0.0/0
#      NatGatewayId: !Ref NatGateway2

  TGWAttachment:
    Type: AWS::EC2::TransitGatewayAttachment
    Properties:
      SubnetIds:
        - !Ref SubnetData1
        - !Ref SubnetData2
      TransitGatewayId: !Ref pTransitGatewayID
      VpcId: !Ref VPCBU4
      Tags:
        - Key: Name
          Value: !Ref VPCBU4

  # Database resources
  VPCSecGroupRDS:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${pBusinessUnit}-${pDatabaseName}-SG"
      GroupDescription: "Open Ports for RDS Instance"
      VpcId: !Ref VPCBU4
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref pDBPort
          ToPort: !Ref pDBPort
          CidrIp: 10.0.3.0/24

        - IpProtocol: tcp
          FromPort: !Ref pDBPort
          ToPort: !Ref pDBPort
          CidrIp: 10.0.4.0/24

#        - IpProtocol: tcp
#          FromPort: !Ref pDBPort
#          ToPort: !Ref pDBPort
#          CidrIp: 10.0.3.0/24
#
#        - IpProtocol: tcp
#          FromPort: !Ref pDBPort
#          ToPort: !Ref pDBPort
#          CidrIp: 10.0.4.0/24
      Tags:
        - Key: Name
          Value: !Sub "${pDatabaseName}-SGRDS"
  #Create Subnet group for RDS Instance.
  RDSDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "DB Subnet Group - Data"
      DBSubnetGroupName: !Sub "${pBusinessUnit}-${pDatabaseName}-SubnetGroup"
      SubnetIds:
        - !Ref SubnetData1
        - !Ref SubnetData2

  #Secret Manager
  SecretsManagerAdminPass:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: AWS RDS admin credentials
      Name: !Sub "${pDatabaseName}-Admin"
      GenerateSecretString:
        SecretStringTemplate: '{"username": "admindb"}'
        GenerateStringKey: password
        PasswordLength: 18
        ExcludePunctuation: true
        # ExcludeCharacters: '"@/\:,'
      Tags:
        - Key: Owner
          Value: !Sub "${pBusinessUnit}"
  #RDS Instance
  MasterDB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: !Ref pDatabaseName
      VPCSecurityGroups:
        - !Ref VPCSecGroupRDS
      AllocatedStorage: !Ref pDBSize
      DBInstanceClass: !Ref pDBInstanceClass
      Engine: mysql
      EngineVersion: '8.0.28'
      MasterUsername: !Sub '{{resolve:secretsmanager:${SecretsManagerAdminPass}::username}}'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${SecretsManagerAdminPass}::password}}'
      Port: !Ref pDBPort
      DBSubnetGroupName: !Ref RDSDBSubnetGroup
      BackupRetentionPeriod: 1
      MultiAZ: true
      PubliclyAccessible: false
    DependsOn:
      - SecretsManagerAdminPass
    DeletionPolicy: Snapshot
    UpdateReplacePolicy: Snapshot

  SecretRDSInstanceAttachment:
    Type: 'AWS::SecretsManager::SecretTargetAttachment'
    Properties:
      SecretId: !Ref SecretsManagerAdminPass
      TargetId: !Ref MasterDB
      TargetType: 'AWS::RDS::DBInstance'
  # Store Parameters in System Manager Store
  ParRDSInstanceId:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "RDSInstanceARN"
      Type: String
      Value:
        Fn::Sub: "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:${MasterDB}"

  ParRDSInstanceName:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "RDSInstanceName"
      Type: String
      Value: !GetAtt [ MasterDB, Endpoint.Address ]

Outputs:
  # VPC outputs
  StackName:
    Description: A name of the Stack
    Value: !Ref AWS::StackName
  VPCId:
    Description: Business Unit 4 VPC ID
    Value: !Ref VPCBU4

  # RDS outputs
  DBConnectionString:
    Description: JDBC connection string for the master database
    Value: !Join [ '', [ 'jdbc:mysql://', !GetAtt [ MasterDB, Endpoint.Address ], ':',
                         !GetAtt [ MasterDB, Endpoint.Port ], /, !Ref 'pDatabaseName' ] ]
    Export:
      Name:
        Fn::Sub: '${AWS::StackName}::DBConnectionString'
  DBConnectionFQDN:
    Description: the master database FQDN
    Value:
      !Join [ '', [ !GetAtt [ MasterDB, Endpoint.Address ], ':',
                    !GetAtt [ MasterDB, Endpoint.Port ] ] ]
    Export:
      Name:
        Fn::Sub: '${AWS::StackName}::DBConnectionFQDN'
  DBName:
    Value: !Ref pDatabaseName
    Export:
      Name:
        Fn::Sub: '${AWS::StackName}::DBName'
  DBInstanceId:
    Description: DB Instance Identifier ARN
    Value: !Ref MasterDB
    Export:
      Name:
        Fn::Sub: '${AWS::StackName}::DBInstanceID'



